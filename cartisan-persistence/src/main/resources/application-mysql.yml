spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 3
      # 连接池最小连接数
      min-idle: 3
      # 连接池最大连接数
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 既作为检测的间隔时间又作为 testWhileIdel 执行的依据
      time-between-connect-error-millis: 60000
      # 一个连接在池中最小生存的时间，单位毫秒
      min-evictable-idle-time-millis: 60000
      # 一个连接在池中最大生存的时间，单位毫秒
      max-evictable-idle-time-millis: 90000
      # 用来检测连接是否有效的 sql，必须是一个查询语句
      # mysql 中为 select 1
      # oracle 中为 select 1 from dual
      validation-query: select 1
      # 申请连接时会执行 validationQuery，检测连接是否有效，开启会降低性能，默认为 true
      test-on-borrow: false
      # 归还连接时会执行 validationQuery，检测连接是否有效，开启会降低性能，默认为 true
      test-on-return: false
      # 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis，执行 validationQuery 检测连接是否有效。
      test-while-idle: true
      # 是否缓存 preparedStatement，mysql5.5+ 建议开启
      pool-prepared-statements: true
      # 当值大于 0 时，poolPreparedStatements 会自动修改为 true
      max-pool-prepared-statement-per-connection-size: 20
      # 合并多个 DruidDataSource 的监控数据
      use-global-data-source-stat: false
      # 配置扩展插件
      # filters: stat, wall, slf4j
      filters: stat, slf4j
      # 通过 connectProperties 属性来打开 mergeSql 功能，慢 SQL 记录
      #      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=${spring.datasource.decrypt};config.decrypt.key=${spring.datasource.public-key}
      # mergeSql=true时，项目在执行flyway脚本时会把Sql解析异常，但执行结果正确
      connection-properties: druid.stat.mergeSql=false;druid.stat.slowSqlMillis=5000;config.decrypt=${spring.datasource.decrypt};config.decrypt.key=${spring.datasource.public-key}
      # 定时输出统计信息到日志中，并每次输出日志会导致清零（reset）连接池相关的计数器
      # 合并多个 DruidDataSource 的监控数据 use-global-data-source-stat 不可开启，否则会报错
      # time-between-log-stats-millis: 30000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      keep-alive: true
      phy-max-use-count: 10000
      filter:
        config:
          enabled: true
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: '/*'
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid*,/swagger-*"
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        # 是否启用 StatViewServlet（监控页面）默认值为 false（考虑安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        enabled: true
        url-pattern: "/druid/*"
        # IP 白名单（没有配置或者为空，则允许所有访问）
        allow:
        # IP 黑名单（存在共同时，deny 优先于 allow）
        deny:
        # 禁用 HTML 页面上的 "Reset All" 功能
        reset-enable: false
        # 登录名
        login-username: cartisan
        # 登录密码
        login-password: cartisan
  jpa:
    database: MySQL
    generate-ddl: false   # 是否生成 ddl 语句
    show-sql: false
    hibernate:
      ddl-auto: none


logging:
  level:
    org.hibernate: info
    org.hibernate.type.descriptor.sql.BasicBinder: info
    org.hibernate.type.descriptor.sql.BasicExtractor: info

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  # 指向实体类包路径
#  type-aliases-package: com.cartisan
#  # mapper xml 文件地址
#  mapper-locations: classpath:mapper/**/*.xml
#  # 检查 mybatis 配置是否存在，一般命名为 mybatis-config.xml
#  check-config-location: true
#  # 执行模式。默认是 SIMPLE
#  executor-type: simple




#pagehelper分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
